Multi-indexing
우리는 DataFrame에서 계층적인 index, column을 만들 수 있다. 이런 계층적인 indexing 에 있어서 중간에 어떤 factor를 모두 선택하고 싶다면, 기존의 방식을 따르면 된다. 
Ex) index[("A", 1, "가"),("A", 1, "나"), ("A", 1, "다") ("A", 2, "가"), ("A", 2, "나"), ("A", 2, "다"), ("B", 1, "가") ("B", 1, "나"), ("B", 1, "다"), ("B", 2, "가"), ("B", 2, "나"), ("B", 2, "다")]
--> df.loc["A", :, "가"]

또한 우리가 row, column을 한 []안에서 indexing을 하고 싶다면, tuple을 이용하면된다. Pandas에서 tuple은 수직적으로 내려오는 관계를 indexing, list는 수평적으로 퍼져가는 것을 indexing한다. 
--> A, 1, 가 index의 "hi"라는 column 값을 보고 싶다면, df.loc[("A", 1, "가"), ("hi")]
하지만, tuple의 경우 : 를 포함하여 만들 수 없다. 

따라서 : 를 포함하여 index, column indexing을 동시에 하고자 하면, 다음과 같이 df을 분리한뒤 한번더 indexing 하는 방법이 있을 것이다. 
--> df.loc["A", :, "가"]["hi"] --> 그러나 이런 방식의 indexing의 경우에는 apply와 같은 fuction을 사용할때 SettingWithCopyWarning이 생길 수 있다. 
이 Error에 대한 것은 아래 link에서 확인해보자

Like about the error of view of DataFrame in pandas  
: https://emilkwak.github.io/pandas-dataframe-settingwithcopywarning  
https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy 


